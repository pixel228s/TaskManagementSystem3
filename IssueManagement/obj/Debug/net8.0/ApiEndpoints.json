[
  {
    "ContainingType": "IssueManagement.Controllers.AccountController",
    "Method": "authenticate",
    "RelativePath": "api/Account/authenticate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginRequest",
        "Type": "IssueManagement.Application.Accounts.Requests.LoginRequestModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 401
      }
    ]
  },
  {
    "ContainingType": "IssueManagement.Controllers.AccountController",
    "Method": "ChangePassword",
    "RelativePath": "api/Account/change-pass",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "IssueManagement.Application.Accounts.Requests.ChangePasswordRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IssueManagement.Application.Users.Responses.UserResponseModel",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IssueManagement.Controllers.AccountController",
    "Method": "ConfirmEmail",
    "RelativePath": "api/Account/EmailConfirmation",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "confirmEmailRequest",
        "Type": "IssueManagement.Application.Accounts.Requests.ConfirmEmailRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IssueManagement.Controllers.AccountController",
    "Method": "SetNewPasswordAsync",
    "RelativePath": "api/Account/NewPassword",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "IssueManagement.Application.Accounts.Requests.NewPasswordRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IssueManagement.Application.Users.Responses.UserResponseModel",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IssueManagement.Controllers.AccountController",
    "Method": "RegisterUser",
    "RelativePath": "api/Account/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginRequest",
        "Type": "IssueManagement.Application.Accounts.Requests.RegisterRequestModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IssueManagement.Application.Users.Responses.UserResponseModel",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IssueManagement.Controllers.AccountController",
    "Method": "ResetPasswordAsync",
    "RelativePath": "api/Account/reset-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "IssueManagement.Application.Accounts.Requests.ResetPasswordRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IssueManagement.Controllers.IssueController",
    "Method": "CreateIssue",
    "RelativePath": "api/Issue/create-issue",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "IssueManagement.Application.Issues.requests.CreateIssueRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IssueManagement.Application.Issues.responses.IssueResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IssueManagement.Controllers.IssueController",
    "Method": "DeleteIssueById",
    "RelativePath": "api/Issue/delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IssueManagement.Controllers.IssueController",
    "Method": "GetIssueById",
    "RelativePath": "api/Issue/id/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IssueManagement.Application.Issues.responses.IssueResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IssueManagement.Controllers.IssueController",
    "Method": "FindIssuesByTitle",
    "RelativePath": "api/Issue/include/{title}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "title",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IssueManagement.Application.Issues.responses.IssueResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IssueManagement.Controllers.IssueController",
    "Method": "GetIssuesOrderedByPriority",
    "RelativePath": "api/Issue/prioritized-issues",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "IssueManagement.Application.Issues.responses.IssueResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IssueManagement.Controllers.IssueController",
    "Method": "GetIssuesByPriority",
    "RelativePath": "api/Issue/priority/{priority}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "priority",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IssueManagement.Application.Issues.responses.IssueResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IssueManagement.Controllers.IssueController",
    "Method": "GetIssuesByStatus",
    "RelativePath": "api/Issue/status/{status}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IssueManagement.Application.Issues.responses.IssueResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IssueManagement.Controllers.IssueController",
    "Method": "UpdateIssueById",
    "RelativePath": "api/Issue/update-issue",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "request",
        "Type": "IssueManagement.Application.Issues.requests.IssuePutRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IssueManagement.Application.Issues.responses.IssueResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IssueManagement.Controllers.IssueController",
    "Method": "FindIssuesByUserId",
    "RelativePath": "api/Issue/user-issues/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IssueManagement.Application.Issues.responses.IssueResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IssueManagement.Controllers.UserController",
    "Method": "GetUserByEmail",
    "RelativePath": "api/User/email/{email}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IssueManagement.Application.Users.Responses.UserResponseModel",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IssueManagement.Controllers.UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/User/update-user",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateModel",
        "Type": "IssueManagement.Application.Users.Requests.UserUpdateModel",
        "IsRequired": true
      },
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IssueManagement.Application.Users.Responses.UserResponseModel",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IssueManagement.Controllers.UserController",
    "Method": "GetUserByUsername",
    "RelativePath": "api/User/username/{username}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IssueManagement.Application.Users.Responses.UserResponseModel",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]